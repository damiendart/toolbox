#!/bin/sh
#
# Damien Dart's cross-shell configuration file for interactive shells.
#
# This file was written by Damien Dart, <damiendart@pobox.com>. This is
# free and unencumbered software released into the public domain. For
# more information, please refer to the accompanying "UNLICENCE file.

# Given a new-line-separated list of filenames via STDIN, source
# the first file that exists. The first argument is a name for the list
# of filenames, and is used in error messages to aid with debugging and
# to prevent files from being sourced again on subsequent invocations.
shellrc__source_one ()
{
  # shellcheck disable=2034
  IPS="\n"

  case "$__SOURCE_ONE_SOURCED" in
    *$1*)
      return
      ;;
  esac

  while read -r ITEM; do
    if [ -f "$ITEM" ]; then
      # shellcheck disable=SC1090
      . "$ITEM"
      export __SOURCE_ONE_SOURCED="$1 $__SOURCE_ONE_SOURCED"

      return
    fi
  done

  echo "[âœ˜] $0: Unable to source anything in \"$1\"" 1>&2
}

shellrc__prompt_command ()
{
  LAST_COMMAND_EXIT_STATUS="$?"
  STATUS=""

  if [ -n "$RANGER_LEVEL" ]; then
    STATUS=" ranger "
  fi

  # The following super-minimalist interactive shell prompt is based on
  # <https://twitter.com/thingskatedid/status/1316081075043463170>,
  # <https://twitter.com/thingskatedid/status/1316081732467081217>, and
  # <https://unix.stackexchange.com/questions/62173/exit-status-of-148-upon-ctrlz>.
  if [ $LAST_COMMAND_EXIT_STATUS = "0" ] || [ $LAST_COMMAND_EXIT_STATUS = "148" ]; then
    PS1=":$STATUS; "
  else
    PS1="\[\e[1;31m\]:$STATUS; \[\e[0m\]"
  fi

  # "pathshorten" is a standalone implementation of Vim's "pathshorten"
  # function written in Go. For more information, see
  # <https://github.com/damiendart/pathshorten>.
  if command -v pathshorten 1>/dev/null 2>&1; then
    # shellcheck disable=SC2089
    FZF_CTRL_T_OPTS="${FZF_CTRL_T_OPTS_BASE} --prompt='$(pathshorten -n)/'"
  fi
}

export PROMPT_COMMAND='shellrc__prompt_command'

if type 'fzf' 1>/dev/null 2>&1; then
  export FZF_CTRL_R_OPTS="--prompt=';; '"
  # shellcheck disable=SC2089,SC2090
  export FZF_CTRL_T_OPTS='--exit-0 --preview="(bat --color=always --pager=never --style=plain {} || cat {}) 2>/dev/null | head -200" --select-1'
  export FZF_CTRL_T_OPTS_BASE="${FZF_CTRL_T_OPTS}"
  export FZF_DEFAULT_OPTS='--border --info=inline --layout=reverse'

  if type 'rg' 1>/dev/null 2>&1; then
    export FZF_CTRL_T_COMMAND='rg --files --hidden'
    export FZF_DEFAULT_COMMAND="$FZF_CTRL_T_COMMAND"
  fi

  if type 'tree' 1>/dev/null 2>&1; then
    export FZF_ALT_C_OPTS="--preview='tree -C {} | head -200' --prompt=';; cd '"
    # shellcheck disable=SC2090
    export FZF_CTRL_T_OPTS='--exit-0 --preview="(bat --color=always --pager=never --style=plain {} || cat {} || tree -C {}) 2>/dev/null | head -200" --select-1'
    # shellcheck disable=SC2090
    export FZF_CTRL_T_OPTS_BASE="${FZF_CTRL_T_OPTS}"
  fi
fi

shellrc__source_one "virtualwrapper_lazy" <<VIRTUALWRAPPER_LAZY
$HOME/Library/Python/3.7/bin/virtualenvwrapper_lazy.sh
$HOME/.local/bin/virtualenvwrapper_lazy.sh
VIRTUALWRAPPER_LAZY

if [ -f ~/.machine.shellrc ]; then
  # shellcheck disable=SC1090
  . ~/.machine.shellrc
fi
