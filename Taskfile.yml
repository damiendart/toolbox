# This file was written by Damien Dart, <damiendart@pobox.com>. This is
# free and unencumbered software released into the public domain. For
# more information, please refer to the accompanying "UNLICENCE file.
---

version: '3'

output: 'prefixed'

tasks:
  default:
    deps:
      - task: 'ci'

  ci:
    cmds:
      - task: 'start'
      - task: 'dependencies'
      - task: 'lint'
    desc: 'Run all CI-related tasks'

  dependencies:
    cmds:
      - cmd: 'shellcheck -V 1&>/dev/null || (echo "ERROR: Shellcheck is not installed!"; exit 1)'
      - task: 'dependencies:git-submodules'
      - task: 'dependencies:python'
    desc: 'Run all dependency-installing tasks'

  dependencies:git-submodules:
    cmds:
      - 'git submodule init'
      - 'git submodule sync --recursive'
      - 'git submodule update --recursive'
    desc: 'Initialise and update Git submodules'

  dependencies:python:
    cmds:
      - '.venv/bin/python -m pip install -r requirements.txt'
    desc: 'Install Python dependencies'

  lint:
    cmds:
      - task: 'lint:python'
      - task: 'lint:shell'
    desc: 'Run all linting-related tasks'

  lint:python:
    cmds:
      - task: 'lint:python:black'
      - task: 'lint:python:flake8'
      - task: 'lint:python:mypy'
    desc: 'Run all Python-linting tasks'

  lint:python:black:
    cmds:
      - '.venv/bin/black --check --diff install bin/git-hometime bin/markdown-tidy bin/rpncalc'
    desc: 'Lint Python scripts with Black'

  lint:python:flake8:
    cmds:
      - '.venv/bin/flake8 install bin/git-hometime bin/markdown-tidy bin/rpncalc'
    desc: 'Lint Python scripts with Flake8'

  lint:python:mypy:
    cmds:
      - '.venv/bin/mypy bin/rpncalc'
    desc: 'Type check Python scripts with mypy'

  lint:shell:
    cmds:
      - >-
        shellcheck
        .bash_profile
        .bashrc
        .profile
        .shellrc
        bin/fuzzy-*
    desc: 'Lint shell configuration files and scripts with ShellCheck'

  start:
    cmds:
      - 'python3 -m venv .venv'
      - cmd: |
          if [ -z "$VIRTUAL_ENV" ]; then
            echo "Run \"source .venv/bin/activate\" to activate the virtual environment"
          else
            echo "Active Python virtual environment: $VIRTUAL_ENV"
          fi
        silent: true
    desc: 'Create a Python virtual environment for development and testing'

