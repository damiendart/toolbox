#!/bin/sh
#
# A simple fzf-powered snippet browser and selector script.
#
# See also "$HOME/.vim/plugin/fuzzy-snippets.vim".
#
# This file was written by Damien Dart, <damiendart@pobox.com>. This is
# free and unencumbered software released into the public domain. For
# more information, please refer to the accompanying "UNLICENCE" file.

set -e

help() {
  cat << HELP
Usage: $(basename "$0") [FLAGS] [INITIAL-QUERY]

Opens up a fzf-powered snippet browser.

Requires fzf, ripgrep, and xsel, and that the SNIPPET_PATH environment
variable is set to a colon-seperated list of directories containing
files to use as snippets.

When browsing snippets with fzf, pressing Enter will copy the selected
snippet to the clipboard. Alternatively, the selected snippet can be
printed to standard input by pressing Ctrl-P.

FLAGS:

  -h, --help
    Displays this help text and exits.

  -l, --list
    Prints out a list of available snippet files and exits.
HELP
}

LIST_FILES=0

if ! type 'fzf' 1>/dev/null 2>&1 || \
  ! type 'rg' 1>/dev/null 2>&1 || \
  ! type 'xsel' 1>/dev/null 2>&1;
then
  printf 'ERROR: "%s" requires fzf, ripgrep, and xsel\n' "$(basename "$0")" >&2
  exit 2
fi

if [ -z ${SNIPPET_PATH+x} ]; then
  echo 'ERROR: SNIPPET_PATH environment variable has not been set' >&2
  printf 'See "%s --help" for more information\n' "$(basename "$0")" >&2
  exit 2
fi

# The following command-line argument and option parser is based on
# <http://mywiki.wooledge.org/BashFAQ/035>.
while :; do
  case $1 in
    -h|-\?|--help)
      help
      exit
      ;;
    -l|--list)
      LIST_FILES=1
      shift
      break
      ;;
    --)
      shift
      break
      ;;
    -?*)
      printf 'ERROR: Unknown option: "%s"\n' "$1" >&2
      printf 'See "%s --help" for available options\n' "$(basename "$0")" >&2
      exit 2
      ;;
    *)
      break
  esac

  shift
done

IFS=':'
SNIPPET_FILES=''

for DIRECTORY in $SNIPPET_PATH; do
  if [ ! -d "$DIRECTORY" ]; then
    continue
  fi

  SNIPPET_FILES="$SNIPPET_FILES$(rg --files --sort=path "$DIRECTORY")"
done

if [ "$LIST_FILES" = 1 ]; then
  echo "$SNIPPET_FILES"
  exit
fi

FZF_OUTPUT=$(\
  echo "$SNIPPET_FILES" | sort | fzf \
    --delimiter='/' \
    --expect='ctrl-p' \
    --header='CTRL+P: Print snippet ╱ ENTER: Copy snippet' \
    --with-nth='-1' \
    --preview='(bat --color=always --style=plain {} || cat {}) 2>/dev/null' \
    --prompt='--%<-- ' \
    --query="$1" \
)
SELECTED_ACTION=$(echo "$FZF_OUTPUT" | head -1)
SELECTED_FILE=$(echo "$FZF_OUTPUT" | tail -1)

case $SELECTED_ACTION in
  ctrl-p)
    cat "$SELECTED_FILE"
    ;;
  *)
    xsel -i --clipboard < "$SELECTED_FILE"
    echo "[✔] Copied snippet \"$SELECTED_FILE\" to the clipboard!"
    ;;
esac
