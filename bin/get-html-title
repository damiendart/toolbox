#!/usr/bin/env python3
"""
A simple script that extracts the title from a HTML document.

Currently only supports retrieving HTML documents via a URL.

This file was written by Damien Dart, <damiendart@pobox.com>. This is
free and unencumbered software released into the public domain. For
more information, please refer to the accompanying "UNLICENCE" file.
"""

import argparse
import html.parser
import sys
import urllib.error
import urllib.parse
import urllib.request


user_agent = "Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/114.0"  # noqa: E501


class TitleExtractorParser(html.parser.HTMLParser):
    def __init__(self):
        html.parser.HTMLParser.__init__(self)

        self.match = False
        self.title = ""

    def handle_data(self, data):
        if self.match:
            self.title = data
            self.match = False

    def handle_starttag(self, tag, attributes):
        self.match = tag == "title"


if __name__ == "__main__":
    argument_parser = argparse.ArgumentParser()
    argument_parser.add_argument(
        "-n",
        action="store_true",
        help="do not output the trailing newline",
    )
    argument_parser.add_argument(
        "url",
        help="URL of the HTML document to get the title of",
        nargs=1,
    )

    arguments = argument_parser.parse_args()

    try:
        request = urllib.request.urlopen(
            urllib.request.Request(
                arguments.url[0],
                headers={"User-Agent": user_agent},
            )
        )
    except urllib.error.HTTPError as exception:
        print(
            "Error: HTTP error {}: {}".format(exception.code, exception.msg),
            file=sys.stderr,
        )
        sys.exit(1)

    if "text/html" not in request.headers["Content-Type"]:
        print(
            "Error: resource has unsupported content type: {}".format(
                request.headers["Content-Type"],
            ),
            file=sys.stderr,
        )
        sys.exit(1)

    html_parser = TitleExtractorParser()
    html_parser.feed(
        request.read().decode(request.info().get_content_charset() or "utf-8"),
    )

    if not html_parser.title:
        print("Error: unable to find resource title", file=sys.stderr)
        sys.exit(1)

    if arguments.n:
        print(html_parser.title, end="")
    else:
        print(html_parser.title)
