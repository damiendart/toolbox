#!/bin/sh
#
# Opens or switches to a GNOME Terminal window running tmux.
#
# This file was written by Damien Dart, <damiendart@pobox.com>. This is
# free and unencumbered software released into the public domain. For
# more information, please refer to the accompanying "UNLICENCE" file.

set -e

help() {
  cat << HELP
Usage: $(basename "$0") [FLAGS]

Opens or switches to a GNOME Terminal window running tmux.

By default, running this application will open up a new GNOME Terminal
window running tmux attached to the default session. If such a window
already exists, however, this application will instead give focus to
that window.

Requires gnome-terminal, wmctrl, and xwininfo.

FLAGS:

  -h, --help  Displays this help text and exits.
HELP
}

# The following command-line argument and option parser is based on
# <http://mywiki.wooledge.org/BashFAQ/035>.
while :; do
  case $1 in
    -h|-\?|--help)
      help
      exit
      ;;
    --)
      break
      ;;
    -?*)
      printf 'ERROR: Unknown option: "%s"\n' "$1" >&2
      printf 'See "%s --help" for available options\n' "$(basename "$0")" >&2
      exit 2
      ;;
    *)
      break
  esac

  shift
done

if [ -n "$1" ]; then
    echo 'ERROR: Positional arguments are not used' >&2
    printf 'See "%s --help" for available options\n' "$(basename "$0")" >&2
    exit 2
fi

if ! type 'gnome-terminal' 1>/dev/null 2>&1 || ! type 'wmctrl' 1>/dev/null 2>&1 || ! type 'xwininfo' 1>/dev/null; then
  printf 'ERROR: "%s" requires gnome-terminal, wmctrl, and xwininfo\n' "$(basename "$0")" >&2
  exit 2
fi

TARGET_WINDOW_TITLE=$(
  xwininfo -root -children \
    | rg 'Gnome-terminal"' \
    | rg 'tmux â€”' \
    | tail -1 \
    | awk -F\" '{ print $2; }'
)

if [ -n "$TARGET_WINDOW_TITLE" ]; then
  wmctrl -a "$TARGET_WINDOW_TITLE"
else
  gnome-terminal --window -- tmux new -As0
fi
