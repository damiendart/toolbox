#!/usr/bin/env python3
"""
A simple dotfile-installing script.

This file was written by Damien Dart, <damiendart@pobox.com>. This is
free and unencumbered software released into the public domain. For
more information, please refer to the accompanying "UNLICENCE" file.
"""

import os
import pathlib
import sys

errors = False
files = [
    ".bash_aliases",
    ".bash_profile",
    ".bashrc",
    ".config/git/config",
    ".config/git/ignore",
    ".config/nvim/init.vim",
    ".ideavimrc",
    ".profile",
    ".shellrc",
    ".tmux.conf",
    ".vim/after/ftplugin",
    ".vim/after/plugin",
    ".vim/after/syntax",
    ".vim/pack",
    ".vim/plugin",
    ".vimrc",
]
notice = """
If any shell-related dotfiles have changed, you may need to log out and
log back in, or "source" any new dotfiles so that they take effect in
the current interactive shell session.
""".rstrip()

if __name__ == "__main__":
    for file in files:
        destination = pathlib.Path(pathlib.Path.home(), file)
        source = pathlib.Path(sys.path[0], file).resolve()

        if os.path.exists(destination):
            if os.path.samefile(destination.resolve(), source):
                print('[✔] Link to "' + str(source) + '" already exists')
            else:
                print('[✘] "' + str(destination) + '" already exists')
                errors = True
        else:
            if os.path.islink(destination):
                print('[✘] "' + str(destination) + '" is a dangling symlink')
                errors = True
            else:
                if "/" in file:
                    os.makedirs(os.path.dirname(destination), 0o700, True)

                os.symlink(source, destination)
                print('[✔] Created link to "' + str(source) + '"')

    print(notice)

    if errors:
        sys.exit(1)
