#!/usr/bin/env python

"""A kinda-Dynamic-DNS client for NearlyFreeSpeech.NET-managed domains.

Requires "nfsnapi", available at <https://pypi.python.org/pypi/nfsnapi>.

This file was written by Damien Dart, <damiendart@pobox.com>. This is
free and unencumbered software released into the public domain. For more
information, please refer to the accompanying "UNLICENCE" file.
"""


import ConfigParser
import json
import nfsnapi
import os
import sys
import urllib2


if __name__ == "__main__":
  try:
    config = ConfigParser.ConfigParser()
    config.read(["nfsnddns.cfg", os.path.expanduser("~/.nfsnddns.cfg"),
        os.path.expanduser("~/nfsnddns.cfg")])
    API_key = config.get("credentials", "apikey")
    domain_name = config.get("domain", "domainname")
    sub_domain = config.get("domain", "subdomain")
    username = config.get("credentials", "username")
  except ConfigParser.Error as e:
    sys.stderr.write("ERROR: Unable to parse configuration file.\n")
    sys.stderr.write(str(e) + "\n")
    # TODO: Add usage instructions.
    sys.exit(1)

  try:
    # TODO: Check if IP addresses are being returned.
    old_ip_address = json.loads(nfsnapi.run_request(username, API_key,
        "/dns/%s/listRRs" % domain_name, "name=%s" % sub_domain))[0]["data"]
  except IndexError:
    old_ip_address = None
  except nfsnapi.NFSNAPIRequestError as e:
    sys.stderr.write("ERROR: Unable to get old IP address.\n" + str(e) + "\n")
    sys.exit(1)

  try:
    # TODO: Check if IP addresses are being returned.
    new_ip_address = urllib2.urlopen("http://icanhazip.com").read().rstrip()
  except:
    sys.stderr.write("ERROR: Unable to get current IP address.\n")
    sys.exit(1)

  try:
    if (old_ip_address != new_ip_address):
      if old_ip_address:
        nfsnapi.run_request(username, API_key, "/dns/%s/removeRR" % domain_name,
            "data=%s&name=%s&type=A" % (old_ip_address, sub_domain))
      nfsnapi.run_request(username, API_key, "/dns/%s/addRR" % domain_name,
          "data=%s&name=%s&ttl=180&type=A" % (new_ip_address, sub_domain))
      print "%s.%s now points to %s." % (sub_domain, domain_name, new_ip_address)
  except nfsnapi.NFSNAPIRequestError as e:
    sys.stderr.write("ERROR: Unable to replace resource record.\n" + str(e) +
        "\nWARNING: Previous resource record may have been deleted.")
    sys.exit(1)
